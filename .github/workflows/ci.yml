name: nightly

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout private repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          fetch-tags: true
          repository: Liminova/charlotte-mobile
          token: ${{ secrets.PAT_TOKEN }}

      - name: Get latest Git hash & commit count
        id: sha
        run: |
            echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            echo "commits_count=$(git rev-list $(git describe --tags --abbrev=0)..HEAD --count)" >> $GITHUB_OUTPUT

      - name: Check if build is needed
        id: check_build
        run: |
          CURRENT_SHA=$(git rev-parse --short HEAD)
          NIGHTLY_SHA=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/Liminova/charlotte-mobile/git/refs/tags/nightly" \
            | jq -r '.object.sha' | cut -c1-7 || echo '')

          if [ "$CURRENT_SHA" = "$NIGHTLY_SHA" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "No new commits since last nightly build"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "New commits found, proceeding with build"
          fi

      - uses: pnpm/action-setup@v4
        if: steps.check_build.outputs.skip != 'true'
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        if: steps.check_build.outputs.skip != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Configure Git for private packages
        if: steps.check_build.outputs.skip != 'true'
        run: |
          git config --global url."https://${{ secrets.PAT_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git config --global url."https://".insteadOf "git://"

      - name: Install dependencies
        if: steps.check_build.outputs.skip != 'true'
        run: |
          pnpm install --frozen-lockfile --prod

      # - name: Get version from app.config.js
        # id: app_version
        # run: |
            # VERSION=$(node -p "require('./app.config.js').expo.version")
            # echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install EAS CLI
        if: steps.check_build.outputs.skip != 'true'
        run: pnpm i -g eas-cli

      - name: Build Android
        if: steps.check_build.outputs.skip != 'true'
        run: eas build --local --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          COMMIT_HASH: ${{ steps.sha.outputs.short_sha }}
          COMMITS_COUNT: ${{ steps.sha.outputs.commits_count }}

      - name: Create nightly release
        if: steps.check_build.outputs.skip != 'true'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly v1.0.0-${{ steps.sha.outputs.short_sha }}
          tag_name: nightly
          repository: Liminova/charlotte-mobile
          token: ${{ secrets.PAT_TOKEN }}
          body: |
            Automated build created by GitHub Actions
            Build Date: ${{ github.event.repository.updated_at }}
            Commit: ${{ github.sha }}
            Version: v1.0.0-${{ steps.sha.outputs.short_sha }}
          draft: false
          prerelease: true
          files: |
              ./*.apk
