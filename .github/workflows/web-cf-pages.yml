name: web-cf-pages

on:
  schedule:
    # 12 AM local time (UTC+7)
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  web-cf-pages:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true
          repository: Liminova/charlotte-social
          token: ${{ secrets.PAT_TOKEN }}
          ref: tauri

      - name: Get latest Git hash & commit count
        id: sha
        run: |
            echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            echo "commits_count=$(git rev-list $(git describe --tags --abbrev=0)..HEAD --count)" >> $GITHUB_OUTPUT

      - name: Check if build is needed
        id: check_build
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Manual trigger, proceeding with build"
            exit 0
          fi

          CURRENT_SHA=$(git rev-parse --short HEAD)
          NIGHTLY_SHA=$(curl -s -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            "https://api.github.com/repos/Liminova/charlotte-social/git/refs/tags/nightly" \
            | jq -r '.object.sha' | cut -c1-7 || echo '')

          if [ "$CURRENT_SHA" = "$NIGHTLY_SHA" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            echo "No new commits since last nightly build"
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "New commits found, proceeding with build"
          fi

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        if: steps.check_build.outputs.skip != 'true'
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        if: steps.check_build.outputs.skip != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Generate `routeTree.gen.ts`
        if: steps.check_build.outputs.skip != 'true'
        run: |
          pnpm i -D @tanstack/router-cli
          pnpm tsr generate

      - name: Build Web
        if: steps.check_build.outputs.skip != 'true'
        run: pnpm build

      - name: Deploy to Cloudflare Pages
        if: steps.check_build.outputs.skip != 'true'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=charlotte-social --commit-dirty=true --production